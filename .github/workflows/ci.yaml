name: django 

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: Install Dependencies
        run: |
          python -m venv newenv
          source newenv/bin/activate
          pip install django
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi         
      
      - name: Run Tests
        run: |
          source newenv/bin/activate
          python manage.py test
        # with: # Set the secret as an input
        # test: ${{ secrets.SuperSecret }}
        env: # Or as an environment variable
         SECRET_KEY: ${{ secrets.SECRET_KEY }}
      
      # - name: build docker
      #   run: |
      #     make docker-build
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

          #Openid to deploy image in ecr
      # - name: Configure AWS credentials from Test account
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: ${{ secrets.ROLE }}
      #     aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      - name: Login to Docker Hub
        id: docker-login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build, tag, and push image to Amazon ECR or docker hub
        id: build-image
        env:
        #  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        #  ECR_REPOSITORY: rabindra-test
         REPOSITORY: django_basic_with_rest_framework
         IMAGE_TAG: be-test
        # run: |
        #   docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}"
        #   docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG . --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}"
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/$REPOSITORY:$IMAGE_TAG
#       - name: Deploy in ECS
#         env:
#           SERVICE: ${{ secrets.ECS_SERVICE }}
#           CLUSTER: ${{ secrets.ECS_CLUSTER }}
#         run: | 
#           aws ecs update-service --force-new-deployment --service $SERVICE --cluster $CLUSTER
  
